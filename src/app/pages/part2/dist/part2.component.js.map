{"version":3,"sources":["part2.component.ts"],"names":[],"mappings":"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","file":"part2.component.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-part2',\n  templateUrl: './part2.component.html',\n  styleUrls: ['./part2.component.scss'],\n})\nexport class Part2Component {\n  public diamonds = '';\n  public errorMessage = '';\n  public numberOfDiamond: any;\n  constructor() {}\n\n  onNumberIsChange(value: any){\n    this.diamonds = '';\n    this.drawDiamond(value.target.value);\n  }\n\n  drawDiamond(num: number) {\n    if (this.validatation(num)) {\n      this.errorMessage = '';\n      let initialSpace = '   '; // 3 length\n      let numSize = num - 1;\n      for (let i = 0; i < numSize; i++) {\n        this.createDiamond(num, i, initialSpace);\n      }\n      for (let i = numSize; i >= 0; i--) {\n        this.createDiamond(num, i, initialSpace);\n      }\n    }\n  }\n\n  addSpace(num: number, i: number) {\n    let astrk = '';\n    const lengthSpace = Math.round(num / 2) - i + 4;\n    for (let j = 0; j <= lengthSpace; j++) {\n      astrk += ' ';\n    }\n    return astrk;\n  }\n\n  createDiamond(num: number, i: number, initialSpace: string) {\n    if (!(i % 2)) {\n      let astrk = this.addSpace(num, i);\n      for (let j = 0; j <= i; j++) {\n        astrk += ' *';\n      }\n      console.log(initialSpace + astrk);\n      this.diamonds += `<br>`+initialSpace + astrk;\n    }\n  }\n\n  validatation(num: any) {\n    let errorMessage = '';\n    let isValid = true;\n    console.log(num)\n    num = parseInt(num);\n    console.log(num)\n    if (isNaN(num)) {\n      errorMessage = 'Error: This input cannot be Not A Number';\n      console.log(errorMessage);\n      isValid = false;\n    }\n\n\n    if (!(num % 2) && !isNaN(num)) {\n      errorMessage = 'Error: This input cannot be even number';\n      console.log(errorMessage);\n      isValid = false;\n    }\n\n    if (num < 0) {\n      errorMessage = 'Error: This input cannot be a negative number';\n      console.log(errorMessage);\n      isValid = false;\n    }\n    this.errorMessage = errorMessage;\n    return isValid;\n  }\n}\n"]}